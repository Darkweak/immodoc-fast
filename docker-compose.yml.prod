version: '3.4'

x-react-env: &react-env
  environment:
    - REACT_APP_API_ENTRYPOINT=${HTTP_OR_SSL}${DOMAIN_NAME}

x-cache-from:
  - &api-cache-from
    cache_from:
      - ${NGINX_IMAGE:-quay.io/api-platform/nginx}
      - ${PHP_IMAGE:-quay.io/api-platform/php}

x-networks: &networks
  networks:
    - immodocs

services:
  php:
    build:
      context: ./api
      target: api_platform_php
      <<: *api-cache-from
    image: ${PHP_IMAGE:-quay.io/api-platform/php}
    environment:
      - APP_ENV=${APP_ENV}
      - APP_NAME=${APP_NAME}
      - APP_SECRET=${APP_SECRET}
      - CORS_ALLOW_ORIGIN=^${HTTP_OR_SSL}(${SUBDOMAINS}.)?${DOMAIN_NAME}$$
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASS}@db/${DB_NAME}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - JWT_PASSPHRASE=${JWT}
      - TRUSTED_HOSTS=^(${SUBDOMAINS}\.)?${DOMAIN_NAME}$$
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    depends_on:
      - db
    volumes:
      - ./api:/srv/api:rw,cached
      - ./api/docker/php/conf.d/api-platform.dev.ini/:/usr/local/etc/php/conf.d/api-platform.ini
    <<: *networks

  api:
    build:
      context: ./api
      target: api_platform_nginx
      <<: *api-cache-from
    image: ${NGINX_IMAGE:-quay.io/api-platform/nginx}
    depends_on:
      - php
    volumes:
      - ./api/public:/srv/api/public:ro
    labels:
      - traefik.frontend.rule=HostRegexp:${DOMAIN_NAME},www.${DOMAIN_NAME}
    <<: *networks

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    <<: *networks

  admin:
    build:
      context: ./admin
      target: api_platform_admin_development
      cache_from:
        - ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    image: ${ADMIN_IMAGE:-quay.io/api-platform/admin}
    labels:
      - traefik.frontend.rule=Host:admin.${DOMAIN_NAME}
    <<: *react-env
    volumes:
      - ./admin:/usr/src/admin:rw,cached
    <<: *networks

volumes:
  db-data: {}

networks:
  immodocs:
    external: true
